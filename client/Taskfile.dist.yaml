# https://taskfile.dev

version: "3"

includes:
  # local taskfile
  local:
    taskfile: ./Taskfile.yaml
    optional: true

vars:
  EXT: .exe

tasks:
  default:
    - task: run
  bootstrap:
    desc: Sets up the codebase for development and compilation.
    cmds:
      - cd src/ && yarn install
      - mkdir -p dist/
      - task: tsrs
  run:
    desc: Runs the client application.
    cmds:
      - task: tsrs
      - yarn tauri dev
    env:
      RUST_BACKTRACE: 1
  prod:
    desc: Builds the binary and then runs the client application.
    cmds:
      - task: build
      - src-tauri/target/release/blop-native{{.EXT}}
  clean:
    desc: Removes the compiled client binary.
    dir: src-tauri
    cmds:
      - cd src-tauri/ && cargo clean
  tsrs:
    desc: Generates TypeScript definitions for Tauri event payloads.
    cmds:
      - rm -rf src/events/*.d.ts
      - cd src-tauri/ && cargo test
      - printf "// Automatically generated. Do not manually edit.\n\n" > src/events/index.tmp
      - cd src/events/ && for f in *.d.ts ; do echo "export * from './${f%%.*}'" ; done >> index.tmp
      - mv src/events/index.tmp src/events/index.d.ts
  build:
    desc: Compiles the client application binary.
    cmds:
      - task: bootstrap
      - yarn tauri build
    sources:
      - src/**/*
      - src-tauri/src/**/*
      - src-tauri/icons/**/*
      - index.html
      - package.json
      - tailwind.config.js
      - tsconfig.json
      - vite.config.js
      - yarn.lock
    generates:
      - src-tauri/target/release/blop-native{{.EXT}}
  lint:
    desc: Lints the client source code.
    cmds:
      - cd src-tauri/ && cargo check
      # todo: add eslint
  precommit:
    desc: Prepares the client source code for a commit.
    cmds:
      - yarn prettier
      - cd src-tauri/ && cargo fmt
      - task: lint
